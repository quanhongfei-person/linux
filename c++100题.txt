1.c++函数中值得传递方式有哪几种
	值传递：
	指针传递：
	引用传递：更安全，节省空间
2.c++中的虚函数问题（多态：在继承链中，子类对象重写父类的同名函数）
	class A
	{
		virtual void func1();
		void func2();
	}
	class B:class A
	{
		void func1(){ cout<<"func1 in class B"<<endl;}
		virtual void func2(){cout<<"func2 in class B"<<endl;}
	}
	A中func1和B中func2都是虚函数
3.c和c++有什么区别
	1.从机制上，C语言是面向过程的，基本构造单元为函数，但c也可以编写面向对象的程序，
	   c++是面向对象的，提供了类，但是，c++编写面向对象的程序比C语言容易
	2.从适用的方向：C语言适合代码效率高的场景，如嵌入式；
	   c++适合更上层的，复杂的场景，
4.c和c++中struct有什么区别
	1.C语言的struct类型中只允许存放数据成员，c++中struct既可以存放数据成员，还可以存放函数成员
	2.c++中对struct内部成员进行了访问权限限制（3种），默认是public
5.c++中struct和class区别
	1.默认继承权限：若未明确指定，class继承权限默认为private，struct继承权限默认为public
	2.成员的默认访问权限：class是private权限，struct是pubic权限
6.int id[sizeof(unsigned long)]对吗
	正确，sizeof是运算符，编译时就确定了,可以看做常量
7.c++中new是一个操作符（也可以说是关键字）
8.多态的作用
	1.隐藏实现细节：使得代码能够模块化，扩展代码模块，实现代码重用
	2.接口重用：为了类在继承和派生的时候，保证使用家族中任一类的实例的某一属性正确操作
9.C++中虚函数表是什么时候建立
	编译时期建立，各个虚拟函数在这时被组织成了一个虚拟函数入口地址的数组，而对象的隐藏成员--虚拟函数表指针是在
	程序运行期间，也就四构造函数被调用时进行初始化的，这是实现多态的关键
10.面向对象的三大基本特征
	是什么，怎么用，为什么使用
	1.封装性：将客观事物抽象成类，在c++中使用class或struct实现封装，每个类通过修饰关键字（private、protexted、public）对自身的数据实现保护和隔离
	2.继承性：
	3.多态性：