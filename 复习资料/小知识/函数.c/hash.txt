哈希查找也称为散列查找。所谓的哈希其实就是在记录的存储位置和记录
的关键字之间建立一个确定的对应关系f，使得每个关键字key对应一个存储位置f(key)。
查找时，根据这个确定的对应关系找到给定值的映射f(key),若查找集合中存在这个记录，
则必定在f(key)的位置上。哈希技术既是一种存储方法，也是一种查找方法。

这种对应关系：  哈希函数。
想通过哈希查找算法，去找一个数据：
	1. 构建哈希函数（关键）

哈希函数的构造方法：
（1）直接定址法
函数公式：f(key) = a * key + b（a,b为常数）
		a = 10, b = 5;
		y = 10 *　ｘ　＋　５；
				　１００
		ｙ=10*100 + 5   1005
这种方法的优点是：简单、均匀，不会产生冲突。但是需要事先知道关键字的分布情况，适合查找表较小并且连续的情况。
（2）数字分析法       		也就是取出关键字中的若干位组成哈希地址。比如我们的11位手机号是“187****1234”，
其中前三位是接入号，一般对应不同的电信公司。中间四位表示归属地。最后四位才表示真正的用户号。
如果现在要存储某个部门的员工的手机号，使用手机号码作为关键字，那么很有可能前面7位都是相同的，
所以我们选择后面的四位作为哈希地址就不错。
（3）平方取中法
取关键字平方后的中间几位作为哈希地址。由于一个数的平方的中间几位与这个数的每一位都有关，
所以平方取中法产生冲突的机会相对较小。平方取中法所取的位数由表长决定。
如：K=456，K^2=207936,如果哈希表的长度为100，则可以取79（中间两位）作为哈希函数值。
（4）折叠法
折叠法是将关键字从左到右分割成位数相等的几个部分（最后一部分位数不够可以短），然后将这几部分叠加求和，并按哈希表表长，取后几位作为哈希地址。当关键字位数很多，而且关键字中每一位上数字分布大致均匀时，可以使用折叠法。
如：我们的关键字是9876543210，哈希表表长三位，我们可以分为四组：987 | 654 | 321 | 0，然后将他们叠加求和：987+654+321+0 = 1962,再取后三位就可以得到哈希地址为962.
（5）除留余数法
选择一个适当的正整数p（p<=表长），用关键字除以p，所得的余数可以作为哈希地址。即：H(key) = key % p(p<=表长)，除留余数法的关键是选取适当的p，一般选p为小于或等于哈希表的长度(m)的某个素数。

如：m = 8,p=7.
m = 16,p = 13.
m = 32,p = 31.
（6）随机数法
函数公式：f(key) = random(key).  这里的random是随机函数，当关键字的长度不等时，采用这种方式比较合适。

总之，哈希函数的规则就是：通过某种转换关系，使关键字适度的分散到指定大小的顺序结构中。越分散，查找的时间复杂度就越小， 空间复杂度就越高。哈希查找明显是一种以空间换时间的算法。

上面提到了如何构造一个哈希函数，那就不得不提如何避免冲突的算法。
链地址法

