#include<stdio.h>
#include<unistd.h>
#include <sys/ipc.h>
       #include <sys/shm.h>
#include<stdlib.h>
#include <sys/sem.h>
int sem_P(int semid)
{
	 struct sembuf buf;
	buf.sem_num = 0 ;
	buf.sem_op = -1;
	buf.sem_flg = SEM_UNDO;
	int ret = semop(semid,&buf,1);
	if(-1 == ret)
	{
		perror("semop");
		exit(1);
	}
}
int sem_V(int semid)
{
	 struct sembuf buf;
	buf.sem_num = 0 ;
	buf.sem_op = +1;
	buf.sem_flg = SEM_UNDO;
	int ret = semop(semid,&buf,1);
	if(-1 == ret)
	{
		perror("semop");
		exit(1);
	}
}

int main(int argc, const char *argv[])
{
	key_t key = ftok("./",'!');
	if(-1 == key)
	{
		perror("ftok");
		exit(1);
	}

	int shmid = shmget(key,4096, IPC_CREAT|0666);
	if(-1 == shmid)
	{
		perror("shmget");
		exit(1);
	}
	
	void* ptr = shmat(shmid,NULL,0);
	if(((void *) -1) == ptr )
	{
	
		perror("shmat");
		exit(1);
	}

	int i =10;

	int semid = semget(key,1,IPC_CREAT|0666);
	if(-1 == semid)
	{
		perror("semget");
		exit(1);
	}
	sem_P(semid);
	printf("%d\n",*(int*)ptr);
	sem_V(semid);

	shmdt(ptr);
	shmctl(shmid,IPC_RMID,NULL);
	semctl(semid,0,IPC_RMID);

	return 0;
}
