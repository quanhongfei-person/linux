#include <stdio.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <sqlite3.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <arpa/inet.h>
#include <time.h>
#include <sys/socket.h>
#include <sys/epoll.h>

#define err_msg(msg) do{perror(msg);exit(1);}while(0)
typedef struct sockaddr *SA;




int  urlDecode(  char* dest, const char* src)
{
	if(NULL ==src || NULL == dest)
	{
		return -1;

	}
	int len = strlen(src);
	int i =0 ;
	for(i = 0 ;i<len;i++)
	{

		if('+' == src[i]) strcat(dest,"");
		else if('%'==src[i])
		{
			//if(i+2len)return -1;
			unsigned char high = FromHex((unsigned char)src[++i]);
			unsigned char low = FromHex((unsigned char)src[++i]);
			unsigned char temp = high*16 +low;
			char temp2[5]={0};
			sprintf(temp2,"%c",temp);
			strcat(dest , temp2);
		}
	}
	return 0;
}

int main(void) 
{
	int listfd = socket(AF_INET, SOCK_STREAM, 0);
	if (-1 == listfd)
		err_msg("socket");
	struct sockaddr_in ser, cli;
	struct stat File_Stat;
	bzero(&ser, sizeof(ser));
	bzero(&cli, sizeof(cli));
	bzero(&File_Stat, sizeof(File_Stat));
	ser.sin_addr.s_addr = INADDR_ANY;
	ser.sin_family = AF_INET;
	ser.sin_port = htons(50000);
	int ret = bind(listfd, (SA) &ser, sizeof(ser));
	if (-1 == ret)
		err_msg("bind");
	listen(listfd, 3);
	socklen_t len = sizeof(cli);
	while (1) {
		int conn = accept(listfd, (SA) &cli, &len);
		if (-1 == conn)
			err_msg("zccept");
		printf("对方的ip是%s, 端口是%d\n", inet_ntoa(cli.sin_addr),ntohs(cli.sin_port));
		pid_t pid = fork
		if (pid > 0) {
			close(conn);
			continue;
		}
		
		if (0 == pid) 
		{
			char buf[4096] = {0};
			recv(conn, buf, 4096, 0);    //ssize_t recv(int sockfd, void *buf, size_t len, int flags);//
			printf("%s", buf);
			char *Method = NULL;
			char *url = NULL;
			char *ver = NULL;
			method = strtok(buf, " ");
			url = strtok(NULL, " ");
			ver = strtok(NULL, "\r\n");
			if (0 == strcmp(url, "/")) {
				send_html("1.html", file_stat, conn);

			}
		
		
		
		
		
		
		
		
		