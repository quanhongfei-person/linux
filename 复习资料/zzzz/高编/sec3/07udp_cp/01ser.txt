#include<stdio.h>
#include<stdlib.h>
#include<unistd.h>
#include<string.h>
  #include <sys/types.h>
       #include <sys/socket.h>
  #include <netinet/in.h>
       #include  <netinet/ip.h>
#include<time.h>
#include<sys/stat.h>
#include<fcntl.h>
#include<sys/types.h>

typedef struct sockaddr* SA;
int main(int argc, const char *argv[])
{
	int conn = socket(AF_INET,SOCK_DGRAM,0);
	if(-1 == conn)
	{
		perror("conn");
		exit(1);
	}
	struct sockaddr_in ser,cli;
	bzero(&ser,sizeof(ser));
	bzero(&cli,sizeof(cli));

	ser.sin_addr.s_addr = INADDR_ANY;
	ser.sin_port = htons(50000);
	ser.sin_family = AF_INET;
	int ret = bind(conn,(SA)&ser,sizeof(ser));
	if(-1 == ret)
	{
		perror("bind");
		exit(1);
	}
	int fd = open("./1.png",O_RDONLY);
	if(-1 == fd)
	{
		perror("open 1.png");
			exit(1);
	}
	char buf[1024]={0};
	int len = sizeof(cli);
	recvfrom(conn,buf,1024,0,(SA)&cli,&len);       //第四参数为0是阻塞等待//
	while(1)
	{
		bzero(buf,1024);
		ret =read(fd,buf,1024);
		if(0 == ret) break;
		sendto(conn,buf,ret,0,(SA)&cli,sizeof(cli));
	}
	strcpy(buf,"byebye");
		sendto(conn,buf,strlen(buf),0,(SA)&cli,sizeof(cli));
	close(conn);
	close(fd);
	return 0;
}
