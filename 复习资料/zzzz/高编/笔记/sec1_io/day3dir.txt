文件属性，目录  inode,name   ls 123
1,打开目标目录 
2.读取目录，，  
3.关闭目录 
目录 当文件看，只不过操作函数和操作文件函数不一样。
1.opendir
DIR *opendir(const char *name);
功能:
	打开一个目录获得一个目录流指针
参数:
	name:目录名
返回值：
	成功返回目录流指针
	失败返回NULL

2.readdir
struct dirent *readdir(DIR *dirp);
功能:
	从目录流中读取文件信息并将保存信息的结构体
	地址返回
参数:
	dirp:目录流指针
返回值:
	包含文件信息的结构体
	出错或者读到目录流末尾返回NULL
	
	3、关闭目录 
 int closedir(DIR *dirp);
 功能：关闭之前已经打开的目录流对象
 参数：opendir的返回结果中目录流对象
 返回值：成功  0
 		失败   -1；

3.chdir
chdir ("/home/linux"); "../../"
fopen("1.mp4")
int chdir(const char *path);
功能:
	改变当前程序的工作路径
参数:
	path:改变到的路径
返回值:
	成功返回0
	失败返回-1


/home/linux/Desktop/Music
"file.txt"

chdir("/root");
"file.txt"

4.getcwd //pwd 
char *getcwd(char *buf, size_t size);
功能:
	获得当前的工作路径
参数:
	buf:保存工作路径空间的首地址
	size:保存路径空间的长度
返回值:
	成功返回包含路径空间的字符串首地址
	失败返回NULL

5.mkdir 
int mkdir(const char *pathname, mode_t mode);
功能:
	创建一个目录
	666-
参数:
	pathname:路径
	mode:
		mode & ~umask  0002
		
返回值:
	成功返回0
	失败返回-1
6.rmdir   rm -fr 
int rmdir(const char *pathname);
功能:
	删除一个空目录文件
参数:
	pathname:目录文件的名字
返回值:
	成功返回0
	失败返回-1
	
mode_t umask(mode_t mask);
功能：修改掩码值0xxx 八进制数
参数： mask，希望拥有的掩码值
	返回值，如果成功返回原掩码值，
	

文件属性的获取
 struct stat st;
 struct stat*st ;
 
1.stat
int  stat(const  char  *path, struct stat *buf);
功能:
	获得文件的属性
参数:
	path: 文件的路径
	buf:  属性存放空间的首地址
返回值:
	成功返回0
	失败返回-1


	
st_mode标志位

     000 000 000 100 000 000
     001 100 110 0

 000 000  000    000 000 000
|文件   | |设置| |文件权限 |  
|类型   | |组和|
          |用户|
          |ID  |
		  
suid sgid sb	   
	1	1	1		775	  
		  7775
	
1.获取秒数	
2.转换为需要个格式		  
系统时间的获取:
1.time
time_t time(time_t *t);
time_t tm;
time(&tm)

tm = time(NULL);
功能:
	获得1970年到现在的秒数
参数:
	t:存放秒数的空间首地址
返回值:
	成功返回1970年到现在的秒数
	失败返回-1

2.localtime
struct tm *localtime(const time_t *timep);
功能:
	将一个秒数转化成日历时间
参数:
	timep:保存秒数空间的地址
返回值:
	成功返回保存日历时间结构体的指针
	失败返回NULL

3.ctime
char *ctime(const time_t *timep);
功能:
	将时间秒数转化成字符串
参数:
	timep:保存时间空间的地址
返回值:
	成功返回获得时间字符串的首地址
	失败返回NULL

4.asctime
char *asctime(const struct tm *tm);
功能:
	将日历时间结构体转化成字符串时间
参数:
	tm:时间结构体指针
返回值:
	成功返回时间字符串
	失败返回NULL

5.gmtime
struct tm *gmtime(const time_t *timep);
功能:
	将秒数转化成结构体时间
	转换成0时区时间
参数:
	timep:保存时间结构体地址
返回值:
	成功返回结构体时间
	失败返回NULL
 struct tm 
 {
int tm_sec;         /* seconds */
int tm_min;         /* minutes */
int tm_hour;        /* hours */
int tm_mday;        /* day of the month */
int tm_mon;         /* month */
int tm_year;        /* year */
int tm_wday;        /* day of the week */
int tm_yday;        /* day in the year */
int tm_isdst;       /* daylight saving time */
};

	
作业：
	设计一个程序，要求每隔30秒向日志目录下
	的同名日志文件下写入一条不重复的信息。
	并添加时间信息。
	sleep(1);

	eg: ./a.out  ===>/var/log/a.out.log 
	    ===>xx-xx-xx xx:xx:xx asdfasdf	
		
		
		
		
		erro,,wangbucunzai 
		warning : yujlkjalsdjf
		
		aslkdjflksajd;fkj
		asdlkjflaskdj;file
		asdkljflsakjdlfk
		
		asjdlfjlaskdjflk
		asjkdljflsakdj
		
		
		从键盘（stdin）获得输入，然后显示刚输入的内容+时间（时：分）

		1122334455 
		09:56    1122334455
		
	  int fcntl(int fd, int cmd, ... /* arg */ );
功能：对文件除读写之外的其他操作。
参数；fd，希望操作的文件描述符
	cmd，需要对文件具体需要做什么事情
	 F_GETFL ，获取文件的标记，会从函数的返回值获取到原来标记
     F_SETFL 
	设置非阻塞  O_NONBLOCK
	
	
	
	log
	
	/proc  是数字的目录，计数
	
	17:20：30   当前的进程数：计数
	sleep(3);
	
	
	asdjlfkj  15:20:30 
	asdklfjlkj
	
	asfkjalksjd 15:20:30  log
	

		
		
	