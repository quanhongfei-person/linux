E20180113
#include <stdio.h>
#include <math.h>
int g_i;
#if 0
int main(void)
{
	int n;
	n = 123.456;      出错!//(double可以表示int)//
	double d;
	d = 12345678;

/*	int m;
	signed char c = -10;
	m = c;
	printf("%d\n", m);

	char c;
	int m = 987654321;
	c = m;
	printf("%d\n", c);*/

	unsigned int i = 10;
	int j = -16;

	if((i + j) > 0)
	{
		printf("Yes\n");
	}
	else
	{
		printf("No\n");
	}

	return 0;
}

int add(int a, int b, int c)
{
	return a + b + c;
}

int main(void)
{
	int k;
	k = (1 + 2, 3, 4 + 9);
	add(1, 2, 3);
	;
	printf("%d\n", (1 + 2, 3 , 4 + 9));

	return 0;
}


int main(void)         //putchar一个字符输出函数//
{
	char c = 'K';
	int n;
	n = putchar(c);
	putchar('\n');
	printf("%d\n", n);
	return 0;
}


int main(void)       //getchar一个字符输入函数//
{
	char c1, c2;
	c1 = getchar();
	//fflush(stdin);
	while(getchar() != '\n')
	{
	}
	c2 = getchar();
	printf("end:\n");
	putchar(c1);
	putchar(c2);
	//printf("%d\n", n);
	return 0;
}


int main(void)             //printf函数输出格式//
{
//	printf("Hello World! = %i %d\n", -1234, 4567);
//	int u = -1234;
//	printf("%-16X|\n", u);   //fffffe2b        |//
	float d = 123124.456;
	printf("%p\n", &d);    //指针格式输出//
//	printf("%s\n", "Hello World!");
//	printf("%g\n", d);       //实数格式输出//
//	printf("%.3f\n", (int)(d * 1000) / 1000.0);
	return 0;
}


int main(void)
{
	int n = 10,m = 20;
	int ret;

	ret = scanf("%d%d", &n, &m);  //scanf函数输入格式//
	
	while(ret != 2)
	{
		printf("Error! reinput\n");
		while(getchar() != '\n')
		{
		}
		ret = scanf("%d%d", &n, &m);
	}

	printf("%d + %d = %d\n", n, m, m + n);  //以10+20=30的格式输出//
	return 0;
}


int main(void)
{
	char ch;
	char str[100];
	scanf("%s", str);
	printf("%s\n", str);
	return 0;
}


int main(void)      //输入输出格式//
{
	double d;
//	long long n;
	short s;
	int n, m;
	scanf("%d%d", &n, &m);
//	scanf("%.3lf", &d);
//	scanf("%3d%*3d%3d", &n, &m);
	printf("%d ,%d\n", n, m);
//	s = 1234;
//	scanf("%hd", &s);
//	printf("%d\n", s);
//	scanf("%lld", &n);
//	printf("%lld\n", n);
//	scanf("%lf", &d);
//	printf("%f\n", d);
	return 0;
}
#endif

int main(void)
{
	char c1, c2;
	scanf("%c%c", &c1, &c2);
	printf("%d, %d\n", c1, c2);
	double d = 2;
	printf("%f\n", sqrt(d));
	return 0;
}